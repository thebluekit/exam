23. Область видимости, время жизни и связывание.

План ответа:
	1 понятия «область видимости», «время жизни» и «связывание» в языке Си;
	2 классификация этих понятий;
	3 правила перекрытия областей видимости;
	4 размещение «объектов» в памяти в зависимости от времени жизни;
???	5 влияние связывания на объектный и/или исполняемый файл. ???

1	Время жизни – это интервал времени выполнения программы, в течение которого программный “объект”  существует. 
	Область видимости (scope) имени – это часть текста программы, в пределах которой имя может быть использовано.
	Связывание (linkadge) определяет область программы (функция, файл, вся программа целиком), в которой «программный объект» может быть доступен другим функциям программы.

2 В языке Си выделяют следующие области видимости
	блок - последовательность объявлений, определений и операторов, заключенная в фигурные скобки
		виды блоков: 
			составной оператор
			определение функции
		Переменная, определенная внутри блока, имеет область видимости в пределах блока.
		Формальные параметры функции имеют в качестве области видимости блок, составляющий тело функции.

	файл
		Область видимости в пределах файла имеют имена, описанные за пределами какой бы то ни было функции.
		Переменная с областью видимости в пределах файла видна на протяжении от точки ее описания и до конца файла, содержащего это определение.
		Имя функции всегда имеет файловую область видимости.

	функция
		Метки - это единственные идентификаторы, область действия которых - функция.
		Метки видны из любого места функции, в которой они описаны.
		В пределах функции имена меток должны быть уникальными.	
	
	прототип функции
		Область видимости в пределах прототипа функции применяется к именам переменных, которые используются в прототипах функций.
		Область видимости в пределах прототипа функции простирается от точки, в которой объявлена переменная, до конца объявления прототипа.
		int f(int, double); // ок
		int f(int i, double i); // ошибка компиляции
		int print_matrix(int n, int m, double a[n][m]);
		
В языке Си время жизни «программного объекта» делится на три категории
	глобальное (по стандарту - статическое (англ. static))
		он существует на протяжении выполнения всей программы.
	локальное (по стандарту - автоматическое (англ. automatic))
		обладают «программные объекты», область видимости которых ограничена блоком.
		Такие объекты создаются при каждом входе в блок, где они определяются. 
		Они уничтожаются при выходе из этого «родительского» блока.
	динамическое (по стандарту - выделенное (англ. allocated)).
		Время жизни «выделенных» объектов длится с момента выделения памяти и заканчивается в момент ее освобождения.

Связывание: 
	внешнее (external);
		Имена с внешним связыванием доступны во всей программе. Подобные имена «экспортируются» из объектного файла, создаваемого компилятором.

	внутреннее (internal);
		Имена с внутренним связыванием доступны только в пределах файла, в котором они определены, но могут «разделяться» между всеми функциями этого файла.

	никакое (none).
		Имена без связывания принадлежат одной функции и не могут разделяться вообще.

3 Правила:
	Переменные, определённые в некотором блоке, будут видны во всех блоках, вложенных в данный.
	Имя переменной во вложенном блоке, совпадающее с именем переменной, определённой в блоке-предке, легально и закрывает видимость одноимённой переменной-предка.

4 	Время жизни, область видимости и связывание переменной зависят от места ее определения. 
По умолчанию
	int i; // глобальная переменная
		Глобальное время жизни
		Файловая область видимости
		Внешнее связывание

	{
	int i; } // локальная переменная
		Локальное время жизни
		Видимость в блоке
		Отсутствие связывания
		
5 Содержание объектного файла — в сущности две вещи:
		код, соответствующий определению функции в C файле
		данные, соответствующие определению глобальных переменных в C файле (для инициализированных глобальных переменных начальное значение переменной тоже должно быть сохранено в объектном файле).
	При встрече объявления компилятор оставляет пустые места. Пустое место (ссылка) имеет имя, но значение соответствующее этому имени пока не известно.	
??? далее компоновщик производит исполняемый файл, присвоив каждой ссылке на символ подходящее определение, 	