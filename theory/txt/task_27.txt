27. Функции с переменным числом параметров.
	План ответа:
		Идея реализации 
		использование стандартной библиотеки
		
1 Фактические параметры передаются через стек в порядке, обратном их записи в вызове функции. Это позволяет сравнительно легко передавать переменное число параметров в вызываемую функцию.
	Функции с переменным числом параметров объявляются так:
		тип_рез-та имя(<непустой список первых параметров>, ...)

		В любой функции, использующей переменное количество параметров, должен быть как минимум один реально существующий параметр. 
		int func(...); /* ошибка */

Идеи реализации:
	1. За окончание последовательности переменных принять определенное значение
		Пример
		double avg(double a, ...)
		{
			int n = 0;
			double *p_d = &a;
			double sum = 0.0;
			while (*p_d)
			{
				sum += *p_d;
				n++;
				p_d++;
			}
			if (!n) return 0;
			return sum / n;
		}
	2. В качестве аргумента функции передается количество переменных параметров
		Пример
		void print_ch(int n, ...)
		{
			int *p_i = &n;
			char *p_c = (char*) (p_i+1);
			for (int i = 0; i < n; i++, p_c++)
			printf("%c %d\n", *p_c, (int) *p_c);
		}
		
2 Для прохождения стека с параметрами используют заголовочный файл <stdarg.h>, в котором объявлены:
	тип va_list;
	cемейство функций
	type va_arg(va_list ap, type)
	void va_end(va_list ap)
	void va_start(va_list ap, parmN) – установка указателя на стековый кадр в место нахождения фактического параметра parmN.
		