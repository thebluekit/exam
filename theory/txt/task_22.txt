22. Чтение сложных объявлений.

1.	Правила чтения сложных объявлений:
	Основные конструкции объявлений:
		type [] – массив типа type
		type [N] – массив N элементов типа type
		type (type1, type2, …) – функция, принимающая параметры типа type1, type2, …, и возвращающая результат типа type
		type* -- указатель на type
	
	Приоритеты операций:
		Скобки всегда предпочтительнее звёздочек, т.е. выражение  char** []  следует читать как «адрес массива указателей на указатель на char»
		Круглые скобки всегда предпочтительнее квадратных
		Круглые скобки часто ставят для изменения приоритета операций 
			(пример: int(*func)(void*) - указатель на функцию, возвращающую int 
					 int *func(void*) функция, …, возвращающая указатель на int 

	Чтение идёт «от самого глубокого идентификатора» «изнутри наружу», то есть из центра скобочной последовательности к краям, 
		стирая по пути дешифрования объявления пары скобок.

2.	Недопустимые конструкции в объявлениях:
		Массив функций  int a[10](int)  (именно функций, массив указателей на функции допустим)
		Функция не может вернуть функцию: int g(int)(int)
		Функция не может вернуть массив: int f(int)[]
		В массиве только левая лексема может быть пустой (или переменной)
		Тип void может применяться только вкупе с указателем (звёздочкой) или как результат работы функции. 
			Не допускаются объявления типа  void x;   void x[5];

Примеры:
	int *(*x[10])(void);
		х - массив из десяти элементов типа указатель на функцию, которая не принимает параметров, возвращающую указатель на int
	char *(*(**f[][8])())[];
		f - массив типа массив из 8 элементов типа указатель на указатель на функцию без параметров, возвращающую указатель на массив типа указатель на char
	void (*signal(int, void (*fp)(int)))(int);
		fp - указатель на функцию, принимающую параметр типа int и ничего не возвращающую
		signal - функция, принимающая параметры типа int и fp, и возвращающая указатель на функцию, принимающую параметр типа int и ничего не возвращающую. 
