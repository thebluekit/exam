29. Объединения.

План ответа:
	1 понятие «объединение»;
	2 определение переменной-объединения, способы инициализации переменной-объединения;
	3 особенности выделения памяти под объединения.
	4 использование объединений.Структуры.

1 Объединение — это место в памяти, которое используется для хранения переменных, разных типов. 
	Объединение дает возможность интерпретировать один и тот же набор битов не менее, чем двумя разными способами.
	Все поля объединения разделяют одну и ту же область памяти.


2 
	union тег {
		тип имя-члена;
		тип имя-члена;
		...;
	} переменные-этого-объединения;

	Инициализация
		union u_t
		{
			int i;
			double d;
		};
		...
		union u_t u_1 = {1};
		// только c99
		union u_t u_2 = { .d = 5.25 };

	Присвоение значения одному члену объединения обычно изменит значение других членов.

3 Когда переменная объявляется с ключевым словом union, компилятор автоматически выделяет столько памяти, чтобы в ней поместился самый большой член нового объединения.

4 Использование
	Экономия места
	Создание структур данных из разных типов
	Разный взгляд на одни и те же данные (машинно-зависимо). Пример:
			union word
			{
				unsigned short word;
				struct word_parts
				{
					unsigned char lo;
					unsigned char hi;
				} parts;
			} a;
			a.word = 0xABCD;
			printf("word 0x%4x, hi part 0x%2x, lo part 0x%2x",
					a.word, a.parts.hi, a.parts.lo);
	Доп: если нужны нестандартные преобразования типов.